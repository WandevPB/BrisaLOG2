const { execSync } = require('child_process');

async function resetMigrations() {
    console.log('üîß Verificando estado das migra√ß√µes...');
    
    // Se estamos no Railway (produ√ß√£o), resetar o estado das migra√ß√µes
    if (process.env.NODE_ENV === 'production' && process.env.DATABASE_URL) {
        console.log('üè≠ Ambiente de produ√ß√£o detectado - resetando migra√ß√µes antigas...');
        
        try {
            // Tentar limpar migra√ß√µes problem√°ticas
            console.log('üóëÔ∏è Limpando migra√ß√µes antigas...');
            execSync(`npx prisma db execute --sql "DELETE FROM _prisma_migrations WHERE migration_name LIKE '20250904%' OR migration_name LIKE '20250909%';"`, { 
                stdio: 'inherit',
                cwd: process.cwd()
            });
            console.log('‚úÖ Migra√ß√µes antigas removidas!');
            
        } catch (error) {
            console.log('‚ö†Ô∏è Tabela _prisma_migrations n√£o existe ainda ou erro esperado:', error.message);
        }
        
        try {
            // Verificar se as tabelas j√° existem
            console.log('üîç Verificando se as tabelas j√° existem...');
            execSync(`npx prisma db execute --sql "SELECT 1 FROM cds LIMIT 1;"`, { 
                stdio: 'pipe',
                cwd: process.cwd()
            });
            
            console.log('‚úÖ Tabelas existem - marcando migra√ß√£o como aplicada...');
            execSync(`npx prisma db execute --sql "INSERT INTO _prisma_migrations (id, checksum, finished_at, migration_name, logs, rolled_back_at, started_at, applied_steps_count) VALUES ('20241006000000_init', '0', NOW(), '20241006000000_init', NULL, NULL, NOW(), 1) ON CONFLICT (id) DO NOTHING;"`, { 
                stdio: 'inherit',
                cwd: process.cwd()
            });
            
        } catch (error) {
            console.log('üìù Tabelas n√£o existem ainda ou migra√ß√£o j√° marcada');
        }
        
        console.log('‚úÖ Reset de migra√ß√µes conclu√≠do!');
    } else {
        console.log('üè† Ambiente de desenvolvimento - pulando reset de migra√ß√µes');
    }
}

// Executar se chamado diretamente
if (require.main === module) {
    resetMigrations().catch(console.error);
}

module.exports = { resetMigrations };